{"version":3,"sources":["modules/auth/Signin/SigninJwtAuth.tsx","modules/auth/Signin/index.tsx"],"names":["useStyles","makeStyles","theme","formRoot","textAlign","breakpoints","up","marginBottom","myTextFieldRoot","width","checkboxRoot","marginLeft","pointer","cursor","btnRoot","borderRadius","overrides","MuiCard","root","fontWeight","Fonts","REGULAR","fontSize","textTransform","btnRootFull","dividerRoot","marginRight","textPrimary","color","palette","text","primary","colorTextPrimary","main","underlineNone","textDecoration","textGrey","grey","MyTextField","props","useField","field","meta","errorText","error","touched","TextField","helperText","validationSchema","yup","email","required","password","SigninJwtAuth","dispatch","useDispatch","history","useHistory","onGoToForgetPassword","push","messages","useIntl","classes","Box","flex","display","flexDirection","px","xs","sm","xl","pt","validateOnChange","initialValues","onSubmit","data","setSubmitting","onJwtSignIn","isSubmitting","className","noValidate","autoComplete","mb","placeholder","name","label","IntlMessages","id","variant","lg","type","alignItems","justifyContent","Checkbox","component","ml","onClick","Button","disabled","mt","mr","to","clsx","InfoView","imgRoot","cardRoot","maxWidth","overflow","boxShadow","position","paddingTop","content","left","right","top","height","borderBottomRightRadius","borderBottomLeftRadius","backgroundColor","textUppercase","Signin","md","src","alt","Card"],"mappings":"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","file":"static/js/10.c566491c.chunk.js","sourcesContent":["import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Checkbox} from '@material-ui/core';\r\nimport {Form, Formik, useField} from 'formik';\r\nimport * as yup from 'yup';\r\nimport {useDispatch} from 'react-redux';\r\nimport InfoView from '../../../@crema/core/InfoView';\r\nimport {onJwtSignIn} from '../../../redux/actions';\r\nimport Box from '@material-ui/core/Box';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport {useIntl} from 'react-intl';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport {Fonts} from 'shared/constants/AppEnums';\r\nimport {CremaTheme} from '../../../types/AppContextPropsType';\r\n\r\nconst useStyles = makeStyles((theme:CremaTheme) => ({\r\n  formRoot: {\r\n    textAlign: 'left',\r\n    [theme.breakpoints.up('xl')]: {\r\n      marginBottom: 24,\r\n    },\r\n  },\r\n  myTextFieldRoot: {\r\n    width: '100%',\r\n  },\r\n  checkboxRoot: {\r\n    marginLeft: -12,\r\n  },\r\n  pointer: {\r\n    cursor: 'pointer',\r\n  },\r\n  btnRoot: {\r\n    borderRadius: theme.overrides.MuiCard.root.borderRadius,\r\n    width: '10rem',\r\n    fontWeight: Fonts.REGULAR,\r\n    fontSize: 16,\r\n    textTransform: 'capitalize',\r\n  },\r\n  btnRootFull: {\r\n    width: '100%',\r\n  },\r\n  dividerRoot: {\r\n    marginBottom: 16,\r\n    marginLeft: -48,\r\n    marginRight: -48,\r\n    [theme.breakpoints.up('xl')]: {\r\n      marginBottom: 32,\r\n    },\r\n  },\r\n  textPrimary: {\r\n    color: theme.palette.text.primary,\r\n  },\r\n  colorTextPrimary: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n  underlineNone: {\r\n    textDecoration: 'none',\r\n  },\r\n  textGrey: {\r\n    color: theme.palette.grey[500],\r\n  },\r\n}));\r\nconst MyTextField = (props: any) => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : '';\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n    />\r\n  );\r\n};\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .email('Invalid Email')\r\n    .required('Email required'),\r\n  password: yup.string().required('Password required'),\r\n});\r\n\r\ninterface UserSigninProps {}\r\n\r\nconst SigninJwtAuth: React.FC<UserSigninProps> = props => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const onGoToForgetPassword = () => {\r\n    history.push('/forget-password');\r\n  };\r\n\r\n  const {messages} = useIntl();\r\n\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <Box flex={1} display='flex' flexDirection='column'>\r\n      <Box\r\n        px={{xs: 6, sm: 10, xl: 15}}\r\n        pt={8}\r\n        flex={1}\r\n        display='flex'\r\n        flexDirection='column'>\r\n        <Formik\r\n          validateOnChange={true}\r\n          initialValues={{\r\n            email: 'crema.demo@gmail.com',\r\n            password: 'Pass@1!@all',\r\n          }}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(data, {setSubmitting}) => {\r\n            setSubmitting(true);\r\n            dispatch(onJwtSignIn({email: data.email, password: data.password}));\r\n            setSubmitting(false);\r\n          }}>\r\n          {({isSubmitting}) => (\r\n            <Form className={classes.formRoot} noValidate autoComplete='off'>\r\n              <Box mb={{xs: 5, xl: 8}}>\r\n                <MyTextField\r\n                  placeholder={messages['common.email']}\r\n                  name='email'\r\n                  label={<IntlMessages id='common.email' />}\r\n                  variant='outlined'\r\n                  className={classes.myTextFieldRoot}\r\n                />\r\n              </Box>\r\n\r\n              <Box mb={{xs: 3, lg: 4}}>\r\n                <MyTextField\r\n                  type='password'\r\n                  placeholder={messages['common.password']}\r\n                  label={<IntlMessages id='common.password' />}\r\n                  name='password'\r\n                  variant='outlined'\r\n                  className={classes.myTextFieldRoot}\r\n                />\r\n              </Box>\r\n\r\n              <Box\r\n                mb={{xs: 3, xl: 4}}\r\n                display='flex'\r\n                flexDirection={{xs: 'column', sm: 'row'}}\r\n                alignItems={{sm: 'center'}}\r\n                justifyContent={{sm: 'space-between'}}\r\n                fontSize={15}>\r\n                <Box display='flex' alignItems='center'>\r\n                  <Checkbox className={classes.checkboxRoot} />\r\n                  <Box className={classes.textGrey} component='span'>\r\n                    <IntlMessages id='common.rememberMe' />\r\n                  </Box>\r\n                </Box>\r\n                <Box\r\n                  color='primary.main'\r\n                  component='span'\r\n                  ml={{sm: 4}}\r\n                  className={classes.pointer}\r\n                  onClick={onGoToForgetPassword}\r\n                  fontSize={15}>\r\n                  <IntlMessages id='common.forgetPassword' />\r\n                </Box>\r\n              </Box>\r\n\r\n              <Box\r\n                mb={6}\r\n                display='flex'\r\n                flexDirection={{xs: 'column', sm: 'row'}}\r\n                alignItems={{sm: 'center'}}\r\n                justifyContent={{sm: 'space-between'}}>\r\n                <Button\r\n                  variant='contained'\r\n                  color='secondary'\r\n                  type='submit'\r\n                  disabled={isSubmitting}\r\n                  className={classes.btnRoot}>\r\n                  <IntlMessages id='common.login' />\r\n                </Button>\r\n\r\n                <Box\r\n                  ml={{xs: 0, sm: 4}}\r\n                  mt={{xs: 3, sm: 0}}\r\n                  color='text.secondary'\r\n                  fontSize={15}>\r\n                  <Box className={classes.textGrey} component='span' mr={2}>\r\n                    <IntlMessages id='common.dontHaveAccount' />\r\n                  </Box>\r\n                  <Box component='span'>\r\n                    <Link\r\n                      to='/signup'\r\n                      className={clsx(\r\n                        classes.underlineNone,\r\n                        classes.colorTextPrimary,\r\n                      )}>\r\n                      <IntlMessages id='common.signup' />\r\n                    </Link>\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Box>\r\n\r\n      <InfoView />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SigninJwtAuth;\r\n","import React from 'react';\r\nimport SigninJwtAuth from './SigninJwtAuth';\r\nimport Card from '@material-ui/core/Card';\r\nimport Box from '@material-ui/core/Box';\r\nimport IntlMessages from '../../../@crema/utility/IntlMessages';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Fonts} from '../../../shared/constants/AppEnums';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  imgRoot: {\r\n    cursor: 'pointer',\r\n    display: 'inline-block',\r\n    width: 140,\r\n  },\r\n  cardRoot: {\r\n    maxWidth: '36rem',\r\n    width: '100%',\r\n    overflow: 'hidden',\r\n    boxShadow: '0 10px 15px -3px rgba(0, 0, 0, 0.1)',\r\n    textAlign: 'center',\r\n    position: 'relative',\r\n    paddingTop: 20,\r\n    [theme.breakpoints.up('xl')]: {\r\n      paddingTop: 32,\r\n    },\r\n    '&:before': {\r\n      content: \"''\",\r\n      position: 'absolute',\r\n      left: 0,\r\n      right: 0,\r\n      top: 0,\r\n      width: 130,\r\n      height: 9,\r\n      borderBottomRightRadius: 80,\r\n      borderBottomLeftRadius: 80,\r\n      marginRight: 'auto',\r\n      marginLeft: 'auto',\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  textUppercase: {\r\n    textTransform: 'uppercase',\r\n  },\r\n}));\r\n \r\nconst Signin: React.FC<{}> = () => {\r\n  const classes = useStyles();\r\n\r\n  return ( \r\n    <Box flex={1} display='flex' flexDirection='column' justifyContent='center'>\r\n      <Box mb={{xs: 6, md: 8, xl: 18}} textAlign='center'>\r\n        <img\r\n          className={classes.imgRoot}\r\n          src='/assets/images/logo-white-with-name2.png'\r\n          alt='crema-logo'\r\n        />\r\n      </Box>\r\n\r\n      <Box \r\n        display='flex'\r\n        flexDirection='column'\r\n        justifyContent='center'\r\n        alignItems='center'>\r\n        <Card className={classes.cardRoot}>\r\n          <Box px={{xs: 6, sm: 10, xl: 15}}>\r\n            <Box\r\n              component='h2'\r\n              mb={{xs: 3, xl: 6}}\r\n              color='text.primary'\r\n              fontWeight={Fonts.REGULAR}\r\n              fontSize={{xs: 24, xl: 26}}>\r\n              <IntlMessages id='common.login' />\r\n            </Box>\r\n          </Box>\r\n          {/* 12월달에 담 */}\r\n          <SigninJwtAuth />\r\n          {/* <SigninFirebase /> */}\r\n        </Card>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n"],"sourceRoot":""}